{"trial_id": "0", "hyperparameters": {"space": [{"class_name": "Int", "config": {"name": "no of layers", "default": null, "conditions": [], "min_value": 1, "max_value": 10, "step": 1, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "no of filters_0", "default": null, "conditions": [], "min_value": 32, "max_value": 512, "step": 32, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "activation function_0", "default": "relu", "conditions": [], "values": ["relu", "selu", "tanh", "sigmoid", "selu"], "ordered": false}}, {"class_name": "Choice", "config": {"name": "Dropout_0", "default": 0.1, "conditions": [], "values": [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], "ordered": true}}, {"class_name": "Int", "config": {"name": "no of nodes_0", "default": null, "conditions": [], "min_value": 32, "max_value": 512, "step": 32, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "best optimizer", "default": "adam", "conditions": [], "values": ["adam", "rmsprop", "adadelta", "sgd", "momentum"], "ordered": false}}, {"class_name": "Int", "config": {"name": "no of filters_1", "default": null, "conditions": [], "min_value": 32, "max_value": 512, "step": 32, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "activation function_1", "default": "relu", "conditions": [], "values": ["relu", "selu", "tanh", "sigmoid", "selu"], "ordered": false}}, {"class_name": "Choice", "config": {"name": "Dropout_1", "default": 0.1, "conditions": [], "values": [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], "ordered": true}}, {"class_name": "Int", "config": {"name": "no of filters_2", "default": null, "conditions": [], "min_value": 32, "max_value": 512, "step": 32, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "activation function_2", "default": "relu", "conditions": [], "values": ["relu", "selu", "tanh", "sigmoid", "selu"], "ordered": false}}, {"class_name": "Choice", "config": {"name": "Dropout_2", "default": 0.1, "conditions": [], "values": [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], "ordered": true}}, {"class_name": "Int", "config": {"name": "no of nodes_1", "default": null, "conditions": [], "min_value": 32, "max_value": 512, "step": 32, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "no of nodes_2", "default": null, "conditions": [], "min_value": 32, "max_value": 512, "step": 32, "sampling": "linear"}}], "values": {"no of layers": 3, "no of filters_0": 32, "activation function_0": "selu", "Dropout_0": 0.9, "no of nodes_0": 384, "best optimizer": "sgd", "no of filters_1": 32, "activation function_1": "relu", "Dropout_1": 0.1, "no of filters_2": 32, "activation function_2": "relu", "Dropout_2": 0.1, "no of nodes_1": 32, "no of nodes_2": 32}}, "metrics": {"metrics": {}}, "score": null, "best_step": 0, "status": "FAILED", "message": "Traceback (most recent call last):\n  File \"n:\\deep learning project\\CNN\\emotion-detection-cnn\\env\\lib\\site-packages\\keras_tuner\\src\\engine\\base_tuner.py\", line 274, in _try_run_and_update_trial\n    self._run_and_update_trial(trial, *fit_args, **fit_kwargs)\n  File \"n:\\deep learning project\\CNN\\emotion-detection-cnn\\env\\lib\\site-packages\\keras_tuner\\src\\engine\\base_tuner.py\", line 239, in _run_and_update_trial\n    results = self.run_trial(trial, *fit_args, **fit_kwargs)\n  File \"n:\\deep learning project\\CNN\\emotion-detection-cnn\\env\\lib\\site-packages\\keras_tuner\\src\\engine\\tuner.py\", line 314, in run_trial\n    obj_value = self._build_and_fit_model(trial, *args, **copied_kwargs)\n  File \"n:\\deep learning project\\CNN\\emotion-detection-cnn\\env\\lib\\site-packages\\keras_tuner\\src\\engine\\tuner.py\", line 233, in _build_and_fit_model\n    results = self.hypermodel.fit(hp, model, *args, **kwargs)\n  File \"n:\\deep learning project\\CNN\\emotion-detection-cnn\\env\\lib\\site-packages\\keras_tuner\\src\\engine\\hypermodel.py\", line 149, in fit\n    return model.fit(*args, **kwargs)\n  File \"n:\\deep learning project\\CNN\\emotion-detection-cnn\\env\\lib\\site-packages\\keras\\src\\utils\\traceback_utils.py\", line 122, in error_handler\n    raise e.with_traceback(filtered_tb) from None\n  File \"n:\\deep learning project\\CNN\\emotion-detection-cnn\\env\\lib\\site-packages\\keras\\src\\utils\\traceback_utils.py\", line 117, in error_handler\n    return fn(*args, **kwargs)\nTypeError: TensorFlowTrainer.fit() got an unexpected keyword argument 'epoch'\n"}